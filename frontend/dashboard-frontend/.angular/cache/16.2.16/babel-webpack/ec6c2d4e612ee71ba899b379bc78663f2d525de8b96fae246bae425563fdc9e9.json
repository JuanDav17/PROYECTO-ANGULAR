{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\n// Componentes existentes\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ProductosComponent } from './components/productos/productos.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [\n// Rutas públicas\n{\n  path: '',\n  redirectTo: 'login',\n  pathMatch: 'full'\n}, {\n  path: 'login',\n  component: LoginComponent\n}, {\n  path: 'register',\n  component: RegisterComponent\n},\n// Rutas protegidas - Todos los usuarios autenticados\n{\n  path: 'productos',\n  component: ProductosComponent,\n  canActivate: [AuthGuard]\n},\n// Rutas para VENDEDORES\n{\n  path: 'vendedor',\n  canActivate: [AuthGuard],\n  data: {\n    roles: ['vendedor', 'admin']\n  },\n  children: [\n  // Aquí agregaremos los componentes de vendedor\n  {\n    path: '',\n    redirectTo: 'dashboard',\n    pathMatch: 'full'\n  }\n  // { path: 'dashboard', component: VendedorDashboardComponent },\n  // { path: 'mis-productos', component: MisProductosComponent },\n  // { path: 'mis-ventas', component: MisVentasComponent },\n  ]\n},\n// Rutas para ADMIN\n{\n  path: 'admin',\n  canActivate: [AuthGuard],\n  data: {\n    roles: ['admin']\n  },\n  children: [\n  // Aquí agregaremos los componentes de admin\n  {\n    path: '',\n    redirectTo: 'dashboard',\n    pathMatch: 'full'\n  }\n  // { path: 'dashboard', component: AdminDashboardComponent },\n  // { path: 'usuarios', component: UsuariosComponent },\n  // { path: 'productos', component: AdminProductosComponent },\n  // { path: 'pedidos', component: AdminPedidosComponent },\n  // { path: 'ventas', component: AdminVentasComponent },\n  ]\n},\n// Rutas para USUARIO (Comprador)\n{\n  path: 'comprador',\n  canActivate: [AuthGuard],\n  data: {\n    roles: ['usuario', 'admin']\n  },\n  children: [\n  // Aquí agregaremos los componentes de comprador\n  {\n    path: '',\n    redirectTo: 'catalogo',\n    pathMatch: 'full'\n  }\n  // { path: 'catalogo', component: CatalogoComponent },\n  // { path: 'carrito', component: CarritoComponent },\n  // { path: 'mis-pedidos', component: MisPedidosComponent },\n  ]\n},\n// Página no autorizado\n{\n  path: 'unauthorized',\n  component: LoginComponent\n},\n// Ruta 404\n{\n  path: '**',\n  redirectTo: 'login'\n}];\nexport class AppRoutingModule {\n  static {\n    this.ɵfac = function AppRoutingModule_Factory(t) {\n      return new (t || AppRoutingModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppRoutingModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [RouterModule.forRoot(routes), RouterModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","AuthGuard","LoginComponent","RegisterComponent","ProductosComponent","routes","path","redirectTo","pathMatch","component","canActivate","data","roles","children","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["/app/src/app/app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\n\n// Componentes existentes\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ProductosComponent } from './components/productos/productos.component';\n\nconst routes: Routes = [\n  // Rutas públicas\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n\n  // Rutas protegidas - Todos los usuarios autenticados\n  {\n    path: 'productos',\n    component: ProductosComponent,\n    canActivate: [AuthGuard]\n  },\n\n  // Rutas para VENDEDORES\n  {\n    path: 'vendedor',\n    canActivate: [AuthGuard],\n    data: { roles: ['vendedor', 'admin'] },\n    children: [\n      // Aquí agregaremos los componentes de vendedor\n      { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\n      // { path: 'dashboard', component: VendedorDashboardComponent },\n      // { path: 'mis-productos', component: MisProductosComponent },\n      // { path: 'mis-ventas', component: MisVentasComponent },\n    ]\n  },\n\n  // Rutas para ADMIN\n  {\n    path: 'admin',\n    canActivate: [AuthGuard],\n    data: { roles: ['admin'] },\n    children: [\n      // Aquí agregaremos los componentes de admin\n      { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\n      // { path: 'dashboard', component: AdminDashboardComponent },\n      // { path: 'usuarios', component: UsuariosComponent },\n      // { path: 'productos', component: AdminProductosComponent },\n      // { path: 'pedidos', component: AdminPedidosComponent },\n      // { path: 'ventas', component: AdminVentasComponent },\n    ]\n  },\n\n  // Rutas para USUARIO (Comprador)\n  {\n    path: 'comprador',\n    canActivate: [AuthGuard],\n    data: { roles: ['usuario', 'admin'] },\n    children: [\n      // Aquí agregaremos los componentes de comprador\n      { path: '', redirectTo: 'catalogo', pathMatch: 'full' },\n      // { path: 'catalogo', component: CatalogoComponent },\n      // { path: 'carrito', component: CarritoComponent },\n      // { path: 'mis-pedidos', component: MisPedidosComponent },\n    ]\n  },\n\n  // Página no autorizado\n  { path: 'unauthorized', component: LoginComponent }, // Temporal, crear componente después\n\n  // Ruta 404\n  { path: '**', redirectTo: 'login' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,SAAS,QAAQ,qBAAqB;AAE/C;AACA,SAASC,cAAc,QAAQ,oCAAoC;AACnE,SAASC,iBAAiB,QAAQ,0CAA0C;AAC5E,SAASC,kBAAkB,QAAQ,4CAA4C;;;AAE/E,MAAMC,MAAM,GAAW;AACrB;AACA;EAAEC,IAAI,EAAE,EAAE;EAAEC,UAAU,EAAE,OAAO;EAAEC,SAAS,EAAE;AAAM,CAAE,EACpD;EAAEF,IAAI,EAAE,OAAO;EAAEG,SAAS,EAAEP;AAAc,CAAE,EAC5C;EAAEI,IAAI,EAAE,UAAU;EAAEG,SAAS,EAAEN;AAAiB,CAAE;AAElD;AACA;EACEG,IAAI,EAAE,WAAW;EACjBG,SAAS,EAAEL,kBAAkB;EAC7BM,WAAW,EAAE,CAACT,SAAS;CACxB;AAED;AACA;EACEK,IAAI,EAAE,UAAU;EAChBI,WAAW,EAAE,CAACT,SAAS,CAAC;EACxBU,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,UAAU,EAAE,OAAO;EAAC,CAAE;EACtCC,QAAQ,EAAE;EACR;EACA;IAAEP,IAAI,EAAE,EAAE;IAAEC,UAAU,EAAE,WAAW;IAAEC,SAAS,EAAE;EAAM;EACtD;EACA;EACA;EAAA;CAEH;AAED;AACA;EACEF,IAAI,EAAE,OAAO;EACbI,WAAW,EAAE,CAACT,SAAS,CAAC;EACxBU,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAC,CAAE;EAC1BC,QAAQ,EAAE;EACR;EACA;IAAEP,IAAI,EAAE,EAAE;IAAEC,UAAU,EAAE,WAAW;IAAEC,SAAS,EAAE;EAAM;EACtD;EACA;EACA;EACA;EACA;EAAA;CAEH;AAED;AACA;EACEF,IAAI,EAAE,WAAW;EACjBI,WAAW,EAAE,CAACT,SAAS,CAAC;EACxBU,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,SAAS,EAAE,OAAO;EAAC,CAAE;EACrCC,QAAQ,EAAE;EACR;EACA;IAAEP,IAAI,EAAE,EAAE;IAAEC,UAAU,EAAE,UAAU;IAAEC,SAAS,EAAE;EAAM;EACrD;EACA;EACA;EAAA;CAEH;AAED;AACA;EAAEF,IAAI,EAAE,cAAc;EAAEG,SAAS,EAAEP;AAAc,CAAE;AAEnD;AACA;EAAEI,IAAI,EAAE,IAAI;EAAEC,UAAU,EAAE;AAAO,CAAE,CACpC;AAMD,OAAM,MAAOO,gBAAgB;;;uBAAhBA,gBAAgB;IAAA;EAAA;;;YAAhBA;IAAgB;EAAA;;;gBAHjBd,YAAY,CAACe,OAAO,CAACV,MAAM,CAAC,EAC5BL,YAAY;IAAA;EAAA;;;2EAEXc,gBAAgB;IAAAE,OAAA,GAAAC,EAAA,CAAAjB,YAAA;IAAAkB,OAAA,GAFjBlB,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}