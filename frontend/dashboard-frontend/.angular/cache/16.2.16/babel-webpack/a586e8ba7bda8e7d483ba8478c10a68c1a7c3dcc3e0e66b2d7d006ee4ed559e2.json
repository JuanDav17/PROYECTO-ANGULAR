{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PedidoService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/pedidos';\n  }\n  crearPedido(pedido) {\n    return this.http.post(this.apiUrl, pedido);\n  }\n  obtenerMisPedidos() {\n    return this.http.get(`${this.apiUrl}/mis-pedidos`);\n  }\n  obtenerPedido(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  listarTodosPedidos() {\n    return this.http.get(this.apiUrl);\n  }\n  actualizarEstado(pedidoId, estado) {\n    return this.http.put(`${this.apiUrl}/${pedidoId}/estado`, {\n      estado\n    });\n  }\n  static {\n    this.ɵfac = function PedidoService_Factory(t) {\n      return new (t || PedidoService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PedidoService,\n      factory: PedidoService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["PedidoService","constructor","http","apiUrl","crearPedido","pedido","post","obtenerMisPedidos","get","obtenerPedido","id","listarTodosPedidos","actualizarEstado","pedidoId","estado","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/app/src/app/services/pedido.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Pedido, PedidoCreate } from '../models/pedido.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PedidoService {\r\n  private apiUrl = 'http://localhost:3000/pedidos';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  crearPedido(pedido: PedidoCreate): Observable<Pedido> {\r\n    return this.http.post<Pedido>(this.apiUrl, pedido);\r\n  }\r\n\r\n  obtenerMisPedidos(): Observable<Pedido[]> {\r\n    return this.http.get<Pedido[]>(`${this.apiUrl}/mis-pedidos`);\r\n  }\r\n\r\n  obtenerPedido(id: number): Observable<Pedido> {\r\n    return this.http.get<Pedido>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  listarTodosPedidos(): Observable<Pedido[]> {\r\n    return this.http.get<Pedido[]>(this.apiUrl);\r\n  }\r\n\r\n  actualizarEstado(pedidoId: number, estado: string): Observable<any> {\r\n    return this.http.put(`${this.apiUrl}/${pedidoId}/estado`, { estado });\r\n  }\r\n}"],"mappings":";;AAQA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,+BAA+B;EAET;EAEvCC,WAAWA,CAACC,MAAoB;IAC9B,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAS,IAAI,CAACH,MAAM,EAAEE,MAAM,CAAC;EACpD;EAEAE,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAW,GAAG,IAAI,CAACL,MAAM,cAAc,CAAC;EAC9D;EAEAM,aAAaA,CAACC,EAAU;IACtB,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAS,GAAG,IAAI,CAACL,MAAM,IAAIO,EAAE,EAAE,CAAC;EACtD;EAEAC,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACT,IAAI,CAACM,GAAG,CAAW,IAAI,CAACL,MAAM,CAAC;EAC7C;EAEAS,gBAAgBA,CAACC,QAAgB,EAAEC,MAAc;IAC/C,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAC,GAAG,IAAI,CAACZ,MAAM,IAAIU,QAAQ,SAAS,EAAE;MAAEC;IAAM,CAAE,CAAC;EACvE;;;uBAvBWd,aAAa,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAbnB,aAAa;MAAAoB,OAAA,EAAbpB,aAAa,CAAAqB,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}