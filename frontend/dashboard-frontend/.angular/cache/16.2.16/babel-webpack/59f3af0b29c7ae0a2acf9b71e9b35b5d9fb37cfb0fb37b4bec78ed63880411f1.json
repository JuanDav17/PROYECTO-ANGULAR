{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsuarioService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/usuarios';\n  }\n  listarUsuarios() {\n    return this.http.get(this.apiUrl);\n  }\n  cambiarRol(usuarioId, nuevoRol) {\n    return this.http.put(`${this.apiUrl}/${usuarioId}/rol`, null, {\n      params: {\n        nuevo_rol: nuevoRol\n      }\n    });\n  }\n  cambiarEstado(usuarioId, activo) {\n    return this.http.put(`${this.apiUrl}/${usuarioId}/estado`, null, {\n      params: {\n        activo: activo.toString()\n      }\n    });\n  }\n  static {\n    this.ɵfac = function UsuarioService_Factory(t) {\n      return new (t || UsuarioService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UsuarioService,\n      factory: UsuarioService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["UsuarioService","constructor","http","apiUrl","listarUsuarios","get","cambiarRol","usuarioId","nuevoRol","put","params","nuevo_rol","cambiarEstado","activo","toString","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/app/src/app/services/usuario.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Usuario } from '../models/usuario.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n  private apiUrl = 'http://localhost:3000/usuarios';\n\n  constructor(private http: HttpClient) {}\n\n  listarUsuarios(): Observable<Usuario[]> {\n    return this.http.get<Usuario[]>(this.apiUrl);\n  }\n\n  cambiarRol(usuarioId: number, nuevoRol: string): Observable<any> {\n    return this.http.put(`${this.apiUrl}/${usuarioId}/rol`, null, {\n      params: { nuevo_rol: nuevoRol }\n    });\n  }\n\n  cambiarEstado(usuarioId: number, activo: boolean): Observable<any> {\n    return this.http.put(`${this.apiUrl}/${usuarioId}/estado`, null, {\n      params: { activo: activo.toString() }\n    });\n  }\n}"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,gCAAgC;EAEV;EAEvCC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC;EAC9C;EAEAG,UAAUA,CAACC,SAAiB,EAAEC,QAAgB;IAC5C,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAC,GAAG,IAAI,CAACN,MAAM,IAAII,SAAS,MAAM,EAAE,IAAI,EAAE;MAC5DG,MAAM,EAAE;QAAEC,SAAS,EAAEH;MAAQ;KAC9B,CAAC;EACJ;EAEAI,aAAaA,CAACL,SAAiB,EAAEM,MAAe;IAC9C,OAAO,IAAI,CAACX,IAAI,CAACO,GAAG,CAAC,GAAG,IAAI,CAACN,MAAM,IAAII,SAAS,SAAS,EAAE,IAAI,EAAE;MAC/DG,MAAM,EAAE;QAAEG,MAAM,EAAEA,MAAM,CAACC,QAAQ;MAAE;KACpC,CAAC;EACJ;;;uBAnBWd,cAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdlB,cAAc;MAAAmB,OAAA,EAAdnB,cAAc,CAAAoB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}