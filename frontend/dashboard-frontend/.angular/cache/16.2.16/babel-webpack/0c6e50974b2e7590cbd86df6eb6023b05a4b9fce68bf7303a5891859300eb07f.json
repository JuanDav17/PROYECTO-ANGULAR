{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductoService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/productos';\n  }\n  obtenerProductos(activosSolo = true) {\n    return this.http.get(this.apiUrl, {\n      params: {\n        activos_solo: activosSolo.toString()\n      }\n    });\n  }\n  obtenerProducto(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  obtenerMisProductos() {\n    return this.http.get(`${this.apiUrl}/mis-productos`);\n  }\n  agregarProducto(producto) {\n    return this.http.post(this.apiUrl, producto);\n  }\n  actualizarProducto(id, producto) {\n    return this.http.put(`${this.apiUrl}/${id}`, producto);\n  }\n  eliminarProducto(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function ProductoService_Factory(t) {\n      return new (t || ProductoService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProductoService,\n      factory: ProductoService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["ProductoService","constructor","http","apiUrl","obtenerProductos","activosSolo","get","params","activos_solo","toString","obtenerProducto","id","obtenerMisProductos","agregarProducto","producto","post","actualizarProducto","put","eliminarProducto","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/app/src/app/services/producto.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Producto } from '../models/producto.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductoService {\n  private apiUrl = 'http://localhost:3000/productos';\n\n  constructor(private http: HttpClient) {}\n\n  obtenerProductos(activosSolo: boolean = true): Observable<Producto[]> {\n    return this.http.get<Producto[]>(this.apiUrl, {\n      params: { activos_solo: activosSolo.toString() }\n    });\n  }\n\n  obtenerProducto(id: number): Observable<Producto> {\n    return this.http.get<Producto>(`${this.apiUrl}/${id}`);\n  }\n\n  obtenerMisProductos(): Observable<Producto[]> {\n    return this.http.get<Producto[]>(`${this.apiUrl}/mis-productos`);\n  }\n\n  agregarProducto(producto: Producto): Observable<Producto> {\n    return this.http.post<Producto>(this.apiUrl, producto);\n  }\n\n  actualizarProducto(id: number, producto: Partial<Producto>): Observable<Producto> {\n    return this.http.put<Producto>(`${this.apiUrl}/${id}`, producto);\n  }\n\n  eliminarProducto(id: number): Observable<any> {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n}"],"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,iCAAiC;EAEX;EAEvCC,gBAAgBA,CAACC,WAAA,GAAuB,IAAI;IAC1C,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAa,IAAI,CAACH,MAAM,EAAE;MAC5CI,MAAM,EAAE;QAAEC,YAAY,EAAEH,WAAW,CAACI,QAAQ;MAAE;KAC/C,CAAC;EACJ;EAEAC,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACT,IAAI,CAACI,GAAG,CAAW,GAAG,IAAI,CAACH,MAAM,IAAIQ,EAAE,EAAE,CAAC;EACxD;EAEAC,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACV,IAAI,CAACI,GAAG,CAAa,GAAG,IAAI,CAACH,MAAM,gBAAgB,CAAC;EAClE;EAEAU,eAAeA,CAACC,QAAkB;IAChC,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAW,IAAI,CAACZ,MAAM,EAAEW,QAAQ,CAAC;EACxD;EAEAE,kBAAkBA,CAACL,EAAU,EAAEG,QAA2B;IACxD,OAAO,IAAI,CAACZ,IAAI,CAACe,GAAG,CAAW,GAAG,IAAI,CAACd,MAAM,IAAIQ,EAAE,EAAE,EAAEG,QAAQ,CAAC;EAClE;EAEAI,gBAAgBA,CAACP,EAAU;IACzB,OAAO,IAAI,CAACT,IAAI,CAACiB,MAAM,CAAC,GAAG,IAAI,CAAChB,MAAM,IAAIQ,EAAE,EAAE,CAAC;EACjD;;;uBA7BWX,eAAe,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAfvB,eAAe;MAAAwB,OAAA,EAAfxB,eAAe,CAAAyB,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}